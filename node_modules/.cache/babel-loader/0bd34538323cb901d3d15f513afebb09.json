{"ast":null,"code":"import _slicedToArray from \"/Users/saokanneh/Projects/auth/auth-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/saokanneh/Projects/auth/auth-ui/src/components/signup.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"../styles/sass/auth.sass\";\nimport { Button, Card, CardActions, CardContent, CircularProgress, Grid, Hidden, Icon, Link as MuiLink, Slide, TextField, useMediaQuery, useTheme } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { green } from \"@material-ui/core/colors\";\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\nconst useStyles = makeStyles(theme => ({\n  textWidth: {\n    '& .MuiFormControl-root': {\n      width: \"100%\"\n    }\n  },\n  cardTitle: {\n    textAlign: \"center\"\n  }\n}));\n\nconst useQueryParam = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nexport default function SignUp() {\n  document.title = \"Auth - Sign up\";\n  const classes = useStyles(); // setting the states\n\n  const theme = useTheme();\n  const match = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password = _useState8[0],\n        setPassword = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password2 = _useState10[0],\n        setPassword2 = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        validPass = _useState12[0],\n        setValidPass = _useState12[1];\n\n  const _useState13 = useState({\n    message: \"\",\n    error: false\n  }),\n        _useState14 = _slicedToArray(_useState13, 2),\n        message = _useState14[0],\n        setMessage = _useState14[1];\n\n  const query = useQueryParam();\n  const redirect = query.get('redirect') || '/';\n\n  const _useMutation = useMutation(SIGNUP, {\n    onCompleted(result) {\n      setMessage({\n        message: \"Sign up successful\",\n        error: false\n      });\n    },\n\n    onError(error) {\n      console.log(error);\n      setMessage({\n        message: error.message,\n        error: true\n      });\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        signup = _useMutation2[0];\n\n  const passwordsMatch = toMatch => {\n    setValidPass(toMatch === password);\n    setPassword2(toMatch);\n  };\n\n  const signinButton = React.createElement(MuiLink, {\n    to: `/login/?redirect=${redirect !== \"/\" && redirect}`,\n    component: Link,\n    underline: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Sign in\"));\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    xs: match ? 12 : 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (!validPass) {\n        return false;\n      }\n\n      signup({\n        variables: {\n          first_name: firstName,\n          last_name: lastName,\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Sign up\"), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Or\"), React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, signinButton)), React.createElement(TextField, {\n    label: \"First name\",\n    value: firstName,\n    onChange: e => {\n      setFirstName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Last name\",\n    value: lastName,\n    onChange: e => {\n      setLastName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    label: \"Email address\",\n    value: email,\n    type: \"email\",\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    label: \"Password\",\n    value: password,\n    type: \"password\",\n    error: validPass != null && !validPass,\n    helperText: validPass != null && !validPass && \"Passwords do not match\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Confirm password\",\n    value: password2,\n    error: validPass != null && !validPass,\n    helperText: validPass != null && !validPass && \"Passwords do not match\",\n    type: \"password\",\n    onChange: e => {\n      passwordsMatch(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, message.message !== \"\" && React.createElement(Typography, {\n    variant: \"body2\",\n    color: message.error ? \"error\" : \"textPrimary\",\n    style: !message.error && {\n      color: green[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, message.message))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    type: \"submit\",\n    endIcon: React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"send\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Submit\"))))), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    xs: 6,\n    className: \"welcome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Welcome\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Sign up for access\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"Or\")), React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, signinButton)))))));\n}","map":{"version":3,"sources":["/Users/saokanneh/Projects/auth/auth-ui/src/components/signup.js"],"names":["React","Fragment","useState","useMutation","gql","Button","Card","CardActions","CardContent","CircularProgress","Grid","Hidden","Icon","Link","MuiLink","Slide","TextField","useMediaQuery","useTheme","makeStyles","Typography","useLocation","CardMedia","green","SIGNUP","useStyles","theme","textWidth","width","cardTitle","textAlign","useQueryParam","URLSearchParams","search","SignUp","document","title","classes","match","breakpoints","down","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","password2","setPassword2","validPass","setValidPass","message","error","setMessage","query","redirect","get","onCompleted","result","onError","console","log","signup","passwordsMatch","toMatch","signinButton","e","preventDefault","variables","first_name","last_name","catch","target","value","color","position"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,0BAAP;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,WAHJ,EAIIC,WAJJ,EAIiBC,gBAJjB,EAKIC,IALJ,EAMIC,MANJ,EAOIC,IAPJ,EAQIC,IAAI,IAAIC,OARZ,EASIC,KATJ,EAUIC,SAVJ,EAUeC,aAVf,EAU8BC,QAV9B,QAWO,mBAXP;AAYA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQP,IAAR,EAAcQ,WAAd,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,KAAR,QAAoB,0BAApB;AAEA,MAAMC,MAAM,GAAGpB,GAAI;;;;CAAnB;AAMA,MAAMqB,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AAGnCC,EAAAA,SAAS,EAAE;AACP,8BAA0B;AACtBC,MAAAA,KAAK,EAAE;AADe;AADnB,GAHwB;AASnCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AATwB,CAAL,CAAN,CAA5B;;AAgBA,MAAMC,aAAa,GAAG,MAAM;AACxB,SAAO,IAAIC,eAAJ,CAAoBX,WAAW,GAAGY,MAAlC,CAAP;AACH,CAFD;;AAIA,eAAe,SAASC,MAAT,GAAkB;AAC7BC,EAAAA,QAAQ,CAACC,KAAT,GAAiB,gBAAjB;AACA,QAAMC,OAAO,GAAGZ,SAAS,EAAzB,CAF6B,CAG7B;;AACA,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAMoB,KAAK,GAAGrB,aAAa,CAACS,KAAK,CAACa,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA3B;;AAL6B,oBAOKtC,QAAQ,CAAC,EAAD,CAPb;AAAA;AAAA,QAOtBuC,SAPsB;AAAA,QAOXC,YAPW;;AAAA,qBAQGxC,QAAQ,CAAC,EAAD,CARX;AAAA;AAAA,QAQtByC,QARsB;AAAA,QAQZC,WARY;;AAAA,qBASH1C,QAAQ,CAAC,EAAD,CATL;AAAA;AAAA,QAStB2C,KATsB;AAAA,QASfC,QATe;;AAAA,qBAUG5C,QAAQ,CAAC,EAAD,CAVX;AAAA;AAAA,QAUtB6C,QAVsB;AAAA,QAUZC,WAVY;;AAAA,qBAWK9C,QAAQ,CAAC,EAAD,CAXb;AAAA;AAAA,QAWtB+C,SAXsB;AAAA,QAWXC,YAXW;;AAAA,sBAYKhD,QAAQ,CAAC,IAAD,CAZb;AAAA;AAAA,QAYtBiD,SAZsB;AAAA,QAYXC,YAZW;;AAAA,sBAaClD,QAAQ,CAAC;AACnCmD,IAAAA,OAAO,EAAE,EAD0B;AAEnCC,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAbT;AAAA;AAAA,QAatBD,OAbsB;AAAA,QAabE,UAba;;AAkB7B,QAAMC,KAAK,GAAGzB,aAAa,EAA3B;AACA,QAAM0B,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAU,UAAV,KAAyB,GAA1C;;AAnB6B,uBAqBZvD,WAAW,CAACqB,MAAD,EAAS;AACjCmC,IAAAA,WAAW,CAACC,MAAD,EAAS;AAChBL,MAAAA,UAAU,CAAC;AACPF,QAAAA,OAAO,EAAE,oBADF;AAEPC,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAV;AAIH,KANgC;;AAQjCO,IAAAA,OAAO,CAACP,KAAD,EAAQ;AACXQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAC,MAAAA,UAAU,CAAC;AACPF,QAAAA,OAAO,EAAEC,KAAK,CAACD,OADR;AAEPC,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAV;AAIH;;AAdgC,GAAT,CArBC;AAAA;AAAA,QAqBtBU,MArBsB;;AAsC7B,QAAMC,cAAc,GAAIC,OAAD,IAAa;AAChCd,IAAAA,YAAY,CAACc,OAAO,KAAKnB,QAAb,CAAZ;AAEAG,IAAAA,YAAY,CAACgB,OAAD,CAAZ;AACH,GAJD;;AAMA,QAAMC,YAAY,GACd,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAG,oBAAmBV,QAAQ,KAAK,GAAb,IAAoBA,QAAS,EAA9D;AAAiE,IAAA,SAAS,EAAE5C,IAA5E;AAAkF,IAAA,SAAS,EAAE,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,SAAf;AAA0B,IAAA,OAAO,EAAE,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ;AAOA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,SAAS,EAAE,QAFf;AAGI,IAAA,OAAO,EAAE,QAHb;AAII,IAAA,UAAU,EAAE,QAJhB;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,EAAE,EAAEyB,KAAK,GAAG,EAAH,GAAQ,CANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI;AACI,IAAA,QAAQ,EAAE8B,CAAC,IAAI;AACXA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAI,CAAClB,SAAL,EAAgB;AACZ,eAAO,KAAP;AACH;;AAEDa,MAAAA,MAAM,CAAC;AACHM,QAAAA,SAAS,EAAE;AACPC,UAAAA,UAAU,EAAE9B,SADL;AAEP+B,UAAAA,SAAS,EAAE7B,QAFJ;AAGPE,UAAAA,KAHO;AAIPE,UAAAA;AAJO;AADR,OAAD,CAAN,CAOG0B,KAPH,CAOSL,CAAC,IAAI;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACH,OATD;AAUH,KAlBL;AAmBI,IAAA,EAAE,EAAE,WAnBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,IAArB;AAA2B,IAAA,SAAS,EAAE/B,OAAO,CAACR,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,IAArB;AAA2B,IAAA,SAAS,EAAEQ,OAAO,CAACR,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,KAAK,EAAE,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKsC,YADL,CAFJ,CAFJ,EAUI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,YADX;AAEI,IAAA,KAAK,EAAE1B,SAFX;AAGI,IAAA,QAAQ,EAAG2B,CAAD,IAAO;AACb1B,MAAAA,YAAY,CAAC0B,CAAC,CAACM,MAAF,CAASC,KAAV,CAAZ;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAkBI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,WADX;AAEI,IAAA,KAAK,EAAEhC,QAFX;AAGI,IAAA,QAAQ,EAAGyB,CAAD,IAAO;AACbxB,MAAAA,WAAW,CAACwB,CAAC,CAACM,MAAF,CAASC,KAAV,CAAX;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,EA0BI,oBAAC,SAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,KAAK,EAAE,eAFX;AAGI,IAAA,KAAK,EAAE9B,KAHX;AAII,IAAA,IAAI,EAAE,OAJV;AAKI,IAAA,QAAQ,EAAGuB,CAAD,IAAO;AACbtB,MAAAA,QAAQ,CAACsB,CAAC,CAACM,MAAF,CAASC,KAAV,CAAR;AACH,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EAoCI,oBAAC,SAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,KAAK,EAAE,UAFX;AAGI,IAAA,KAAK,EAAE5B,QAHX;AAII,IAAA,IAAI,EAAE,UAJV;AAKI,IAAA,KAAK,EAAGI,SAAS,IAAI,IAAb,IAAqB,CAACA,SALlC;AAMI,IAAA,UAAU,EAAEA,SAAS,IAAI,IAAb,IAAqB,CAACA,SAAtB,IAAmC,wBANnD;AAOI,IAAA,QAAQ,EAAGiB,CAAD,IAAO;AACbpB,MAAAA,WAAW,CAACoB,CAAC,CAACM,MAAF,CAASC,KAAV,CAAX;AACH,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCJ,EA8CI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,kBADX;AAEI,IAAA,KAAK,EAAE1B,SAFX;AAGI,IAAA,KAAK,EAAGE,SAAS,IAAI,IAAb,IAAqB,CAACA,SAHlC;AAII,IAAA,UAAU,EAAEA,SAAS,IAAI,IAAb,IAAqB,CAACA,SAAtB,IAAmC,wBAJnD;AAKI,IAAA,IAAI,EAAE,UALV;AAMI,IAAA,QAAQ,EAAGiB,CAAD,IAAO;AACbH,MAAAA,cAAc,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV,CAAd;AACH,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CJ,EAyDI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQtB,OAAO,CAACA,OAAR,KAAoB,EAApB,IACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,OAArB;AAA8B,IAAA,KAAK,EAAEA,OAAO,CAACC,KAAR,GAAgB,OAAhB,GAA0B,aAA/D;AAA8E,IAAA,KAAK,EAAG,CAACD,OAAO,CAACC,KAAT,IAAkB;AAACsB,MAAAA,KAAK,EAAErD,KAAK,CAAC,GAAD;AAAb,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK8B,OAAO,CAACA,OADb,CAHR,CAzDJ,CArBJ,EA0FI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAACwB,MAAAA,QAAQ,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,OAAO,EAAC,WAFZ;AAGI,IAAA,IAAI,EAAE,QAHV;AAII,IAAA,OAAO,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CA1FJ,CARJ,CADJ,EAmHI,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,SAAS,EAAE,QAFf;AAGI,IAAA,OAAO,EAAE,QAHb;AAII,IAAA,UAAU,EAAE,QAJhB;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,EAAE,EAAE,CANR;AAOI,IAAA,SAAS,EAAE,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,KAAK,EAAE,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAQI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,EAYI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZJ,CADJ,EAkBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,KAAK,EAAE,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,YADL,CAlBJ,CARJ,CADJ,CAnHJ,CADJ,CADJ,CADJ;AA+JH","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"../styles/sass/auth.sass\"\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardContent, CircularProgress,\n    Grid,\n    Hidden,\n    Icon,\n    Link as MuiLink,\n    Slide,\n    TextField, useMediaQuery, useTheme\n} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport {green} from \"@material-ui/core/colors\";\n\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\n\nconst useStyles = makeStyles(theme => ({\n\n\n    textWidth: {\n        '& .MuiFormControl-root': {\n            width: \"100%\"\n        }\n    },\n\n    cardTitle: {\n        textAlign: \"center\"\n    },\n\n}));\n\n\nconst useQueryParam = () => {\n    return new URLSearchParams(useLocation().search);\n};\n\nexport default function SignUp() {\n    document.title = \"Auth - Sign up\";\n    const classes = useStyles();\n    // setting the states\n    const theme = useTheme();\n    const match = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [validPass, setValidPass] = useState(null);\n    const [message, setMessage] = useState({\n        message: \"\",\n        error: false\n    });\n\n    const query = useQueryParam();\n    const redirect = query.get('redirect') || '/';\n\n    const [signup] = useMutation(SIGNUP, {\n        onCompleted(result) {\n            setMessage({\n                message: \"Sign up successful\",\n                error: false\n            })\n        },\n\n        onError(error) {\n            console.log(error);\n            setMessage({\n                message: error.message,\n                error: true\n            })\n        }\n    });\n\n    const passwordsMatch = (toMatch) => {\n        setValidPass(toMatch === password);\n\n        setPassword2(toMatch);\n    };\n\n    const signinButton =\n        <MuiLink to={`/login/?redirect=${redirect !== \"/\" && redirect}`} component={Link} underline={\"none\"}>\n            <Button color={\"primary\"} variant={\"contained\"}>\n                Sign in\n            </Button>\n        </MuiLink>;\n\n    return (\n        <Fragment>\n            <Card>\n                <Grid container direction={\"row\"}>\n                    <Grid\n                        item\n                        direction={\"column\"}\n                        justify={\"center\"}\n                        alignItems={\"center\"}\n                        container\n                        xs={match ? 12 : 6}\n                    >\n                        <form\n                            onSubmit={e => {\n                                e.preventDefault();\n\n                                if (!validPass) {\n                                    return false;\n                                }\n\n                                signup({\n                                    variables: {\n                                        first_name: firstName,\n                                        last_name: lastName,\n                                        email,\n                                        password\n                                    }\n                                }).catch(e => {\n                                    console.log(e);\n                                })\n                            }}\n                            id={\"cred-form\"}\n                        >\n                            <CardContent>\n                                <Typography variant={\"h4\"} className={classes.cardTitle}>Sign up</Typography>\n                                <Hidden smUp>\n                                    <Typography variant={\"h4\"} className={classes.cardTitle}>Or</Typography>\n                                    <Grid item align={\"center\"}>\n                                        {signinButton}\n                                    </Grid>\n                                </Hidden>\n\n\n                                <TextField\n                                    label={\"First name\"}\n                                    value={firstName}\n                                    onChange={(e) => {\n                                        setFirstName(e.target.value)\n                                    }}\n                                />\n\n                                <TextField\n                                    label={\"Last name\"}\n                                    value={lastName}\n                                    onChange={(e) => {\n                                        setLastName(e.target.value)\n                                    }}\n                                />\n\n                                <TextField\n                                    required\n                                    label={\"Email address\"}\n                                    value={email}\n                                    type={\"email\"}\n                                    onChange={(e) => {\n                                        setEmail(e.target.value)\n                                    }}\n                                />\n\n                                <TextField\n                                    required\n                                    label={\"Password\"}\n                                    value={password}\n                                    type={\"password\"}\n                                    error={ validPass != null && !validPass}\n                                    helperText={validPass != null && !validPass && \"Passwords do not match\"}\n                                    onChange={(e) => {\n                                        setPassword(e.target.value)\n                                    }}/>\n                                <TextField\n                                    label={\"Confirm password\"}\n                                    value={password2}\n                                    error={ validPass != null && !validPass}\n                                    helperText={validPass != null && !validPass && \"Passwords do not match\"}\n                                    type={\"password\"}\n                                    onChange={(e) => {\n                                        passwordsMatch(e.target.value)\n                                    }}\n                                />\n\n                                <Grid align=\"center\">\n                                    {\n                                        message.message !== \"\" &&\n                                        <Typography variant={\"body2\"} color={message.error ? \"error\" : \"textPrimary\"} style={ !message.error && {color: green[500]}}>\n                                            {message.message}\n                                        </Typography>\n                                    }\n\n                                </Grid>\n\n                            </CardContent>\n\n                            <CardActions>\n                                <div style={{position: 'relative'}}>\n\n                                    <Button\n                                        color=\"secondary\"\n                                        variant=\"contained\"\n                                        type={\"submit\"}\n                                        endIcon={<Icon>send</Icon>}\n                                    >\n                                        Submit\n                                    </Button>\n                                </div>\n                            </CardActions>\n\n                        </form>\n                    </Grid>\n                    <Hidden xsDown>\n                        <Grid\n                            item\n                            direction={\"column\"}\n                            justify={\"center\"}\n                            alignItems={\"center\"}\n                            container\n                            xs={6}\n                            className={\"welcome\"}>\n                            <CardContent>\n                                <Grid\n                                    item\n                                    align={\"center\"}\n                                >\n                                    <Typography variant=\"h4\">\n                                        Welcome\n                                    </Typography>\n\n                                    <Typography>\n                                        Sign up for access\n                                    </Typography>\n\n                                    <Typography>\n                                        Or\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item align={\"center\"}>\n                                    {signinButton}\n                                </Grid>\n\n\n                            </CardContent>\n                        </Grid>\n                    </Hidden>\n\n                </Grid>\n            </Card>\n\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}