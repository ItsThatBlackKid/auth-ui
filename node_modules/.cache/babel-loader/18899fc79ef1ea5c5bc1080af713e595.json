{"ast":null,"code":"var _jsxFileName = \"/Users/saokanneh/Projects/auth/auth-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-client\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloLink } from \"apollo-link\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { onError } from \"apollo-link-error\";\nimport Notifications, { notify } from \"react-notify-toast/\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst errorLink = onError(({\n  errors\n}) => {\n  if (errors) errors.map(({\n    errors\n  }) => {\n    console.log(errors);\n    notify.show(errors, 'error');\n  });\n});\nconst httpLink = createHttpLink({\n  uri: \"/api\"\n});\nconst link = ApolloLink.from([errorLink, httpLink]);\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n});\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Notifications, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/saokanneh/Projects/auth/auth-frontend/src/index.js"],"names":["React","ReactDOM","ApolloClient","ApolloProvider","createHttpLink","ApolloLink","InMemoryCache","onError","Notifications","notify","App","serviceWorker","errorLink","errors","map","console","log","show","httpLink","uri","link","from","client","cache","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AAEA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,OAAOC,aAAP,IAAuBC,MAAvB,QAAoC,qBAApC;AAGA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,SAAS,GAAGL,OAAO,CAAC,CAAC;AAACM,EAAAA;AAAD,CAAD,KAAc;AACpC,MAAIA,MAAJ,EAAYA,MAAM,CAACC,GAAP,CAAW,CAAC;AAACD,IAAAA;AAAD,GAAD,KAAc;AACjCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAJ,IAAAA,MAAM,CAACQ,IAAP,CAAYJ,MAAZ,EAAoB,OAApB;AACH,GAHW;AAIf,CALwB,CAAzB;AAOA,MAAMK,QAAQ,GAAGd,cAAc,CAAC;AAACe,EAAAA,GAAG,EAAE;AAAN,CAAD,CAA/B;AAEA,MAAMC,IAAI,GAAGf,UAAU,CAACgB,IAAX,CAAgB,CAACT,SAAD,EAAYM,QAAZ,CAAhB,CAAb;AAEA,MAAMI,MAAM,GAAG,IAAIpB,YAAJ,CAAkB;AAC7BkB,EAAAA,IAD6B;AAE7BG,EAAAA,KAAK,EAAE,IAAIjB,aAAJ;AAFsB,CAAlB,CAAf;AAKAL,QAAQ,CAACuB,MAAT,CACI,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,EAIuBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJvB,E,CAMA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ApolloClient from \"apollo-client\";\nimport {ApolloProvider} from \"@apollo/react-hooks\"\nimport {createHttpLink} from \"apollo-link-http\";\nimport {ApolloLink} from \"apollo-link\";\nimport {InMemoryCache} from \"apollo-cache-inmemory\";\n\nimport {onError} from \"apollo-link-error\";\nimport Notifications, {notify} from \"react-notify-toast/\";\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst errorLink = onError(({errors}) => {\n    if (errors) errors.map(({errors}) => {\n        console.log(errors);\n        notify.show(errors, 'error')\n    })\n});\n\nconst httpLink = createHttpLink({uri: \"/api\"});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nconst client = new ApolloClient( {\n    link,\n    cache: new InMemoryCache()\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Notifications/>\n        <App/>\n    </ApolloProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}